globedit.txt: Use globbing patterns for :edit, :tabedit, etc.

==============================================================================
INTRODUCTION                                                   *globedit.vim*

globedit.vim adds variants of |:edit| and friends that can take a globbing
pattern to open multiple files:
>
    :Edit plugin/*.vim doc/*.doc
    :Split ??_*.c
<
See |wildcards| for a overview of the globbing patterns interpreted by Vim.

Compare this to the default behaviour of `:edit *.vim`, which will either:

- open a file named `*.vim` if there are no matches;
- open the file if there is exactly one match;
- error out with `E77: Too many file names` if there are more than one
  matches.

Based on my answer here, which also lists some other solutions:
http://vi.stackexchange.com/q/2108/51

By default it'll map |:Edit|, |:Tabedit|, |:Split|, and |:Vsplit|. You can use
`:cabbr tabe Tabe` etc. to use it automatically.

==============================================================================
OPTIONS                                                     *globedit-options*

*g:globedit_commands*                                    (Boolean, default: 1)

        Which commands to make; this is a dict where the key is the Vim
        command name and the option value is the {command} to use. If the
        value is an empty string a default is used.

        The new command is the same as the Vim command with the first letter
        converted to uppercase.

        default value: >
            let g:globedit_commands = #{
                \ tabedit: '',
                \ edit:    '',
                \ split:   '',
                \ vsplit:  '',
            \}
<
        Default template is: >
            command! -bar -bang -nargs=+ -complete=file %s call globedit#run("%s", [<f-args>])
<

==============================================================================
COMMANDS                                                   *globedit-commands*

*:Edit*
*:Tabedit*
*:Split*
*:Vsplit*

        Like |:edit|, |:tabedit|, |:split|, and |:vsplit|, but will work with
        any number of globbing patterns. For example: >
            :Edit a.vim
            :Edit *.vim
            :Edit *.vim *.markdown
<

==============================================================================
FUNCTIONS                                                 *globedit-functions*

globedit#run({cmd}, {pattern}, {command})                     *globedit#run()*
        Run Vim command {cmd} for all patterns in the list {pattern}. If no
        files are found an error is shown.
        If the optional argument {command} is given then that command will be
        run with |:execute| after opening each file. For example: >
          call globedit#run('tabedit', ['*.vim'], 'normal! 1G')


vim:tw=78:ts=8:ft=help:norl:expandtab
